<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="mes.prd.com.service.impl.ProduceCommandDMapper">
	
	<!-- 조회화면에서 작업지시 조회 -->
	<select id="produceCommandList"
		parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		select 
		      prd_com_d_date
		    , prd_com_num
		    , (select oper_name from order_d od, order_m om where od.ord_num = om.ord_num and pcd.ord_d_num = od.ord_d_num) oper_name 
		    , itm_code
		    , (select itm_name from item where itm_code = pcd.itm_code) itm_name
		    , (select ord_num from order_d where ord_d_num = pcd.ord_d_num) ord_num
		    , (select ord_request_date from order_m om inner join order_d od on om.ord_num = od.ord_num where pcd.ord_d_num = od.ord_d_num) ord_request_date
		    , (select ord_vol from order_d where ord_d_num = pcd.ord_d_num) ord_vol
		    , prd_com_vol
		    , prc_com_div
		    , lot_num
		    , mat_vol
		    , prc_com_no
		    , prd_com_d_note
		from produce_command_mat pcm, produce_command_d pcd
		where pcm.prd_com_d_num = pcd.prd_com_d_num
	</select>
	
	
	<!-- 작업지시 조회 -->
	<select id="selectProduceCommandList"
		parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		SELECT * FROM (
		SELECT A.*, ROWNUM RNUM FROM (
		select prd_Com_Num , TO_CHAR(prd_Com_Date, 'yyyy-MM-dd') as prd_Com_Date, prd_Com_Name, prd_Com_Note from PRODUCE_COMMAND
		<where>
		<if test="prdComNum1 != null and prdComNum1 != ''">
				<![CDATA[	
					Prd_Com_Num < #{prdComNum1}
				]]>
		</if>
		<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
		<![CDATA[
			AND PRD_COM_DATE >= #{startDate}
			AND PRD_COM_DATE <= #{endDate}
			]]>
		</if>
		</where>
		ORDER BY
		PRD_COM_NUM DESC
		
		<![CDATA[					
		) A WHERE ROWNUM <= 10)
		]]>
	</select>
	
	<!-- 생산계획조회 리스트 수정중 -->
	<select id="prdPlnList" parameterType="mes.prd.pln.service.ProducePlanDVO" resultType="mes.prd.com.service.ProduceCommandDVO">
		SELECT * FROM (
			SELECT A.*, ROWNUM RNUM FROM ( 
		        SELECT A.PRD_DATE
				     , (SELECT OPER_NAME FROM ORDER_M WHERE ORD_NUM = B.ORD_NUM) as OPER_NAME
				     , B.PRD_NUM
				     , B.ITM_CODE
				     , (SELECT ITM_NAME FROM ITEM WHERE ITM_CODE = B.ITM_CODE) as ITM_NAME
				     , B.ORD_NUM
				     , (SELECT ORD_DELIVERY_DATE FROM ORDER_M WHERE ORD_NUM = B.ORD_NUM) as ORD_DELIVERY_DATE
				     , (SELECT ORD_VOL FROM ORDER_D WHERE ORD_NUM = B.ORD_NUM AND ORD_D_NUM = B.ORD_D_NUM) ORD_VOL
				     , B.PRD_WORK_VOL
				     , B.PRD_PLAN_DATE
				     , B.PRD_NO
				FROM PRODUCE_PLAN A
				   , PRODUCE_PLAN_D B 
				WHERE A.PRD_NUM = B.PRD_NUM
				<![CDATA[
				AND PRD_DATE >= #{startDate}
		        AND PRD_DATE <= #{endDate}
		        ]]>
        <![CDATA[
    	) A WHERE ROWNUM <= 10
	)
	]]>
	</select>
	
	<!-- 작업지시디테일 조회 -->
	<select id="selectProduceCommandDList"
		parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		
		SELECT * FROM (
		SELECT A.*, ROWNUM RNUM FROM (
		select A.* , B.yes_Com_Vol,
		        a.ord_vol - B.yes_Com_Vol - a.ord_out_vol as no_Com_Vol,
		        a.itm_day_output/8 as UPH, a.prd_com_vol/a.itm_day_output as day_Num
		from(select C.*, TO_CHAR(C.prd_com_d_date, 'yyyy-MM-dd') as prd_com_d_date1, I.itm_name, M.mat_name, OD.ord_num, to_char(OM.ord_delivery_date,'yyyy-MM-dd') ord_delivery_date, OM.oper_name,
		      OD.ord_vol, OD.ord_out_vol, I.itm_day_output
		      from PRODUCE_COMMAND_d C, item I, order_d OD, order_m  OM, material M
		      where c.prd_com_num = #{prdComNum}
		      	and c.itm_code = i.itm_code
		      	and i.mat_code = m.mat_code
		        and c.ord_d_num = od.ord_d_num (+)
		        and od.ord_num = om.ord_num (+)) A, 
		        (select ord_d_num, sum(prd_com_vol) as yes_Com_Vol
		        from produce_command_d
		        group by ord_d_num) B
		where a.ord_d_num = b.ord_d_num (+)
		<if test="prdComDNum1 != null and prdComDNum1 != ''">
				<![CDATA[	
					and Prd_Com_D_Num > #{prdComDNum1}
				]]>
		</if>
		ORDER BY
		PRD_COM_D_NUM
		
		<![CDATA[					
		) A WHERE ROWNUM <= 10)
		]]>
	</select>
	
	<!-- 작업지시자재 조회 -->
	<select id="selectProduceCommandMatList"
		parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		SELECT * FROM (
		SELECT A.*, ROWNUM RNUM FROM (
		select *
		from PRODUCE_COMMAND_MAT
		where prd_com_d_num = #{prdComDNum}
		<if test="prdComDNum1 != null and prdComDNum1 != ''">
				<![CDATA[	
					and Prd_Com_Mat_Num > #{prdComMatNum}
				]]>
		</if>
		ORDER BY
		PRD_COM_MAT_NUM
		
		<![CDATA[					
		) A WHERE ROWNUM <= 10)
		]]>
	</select>
	
	<!-- 모달 lotno자재 조회 -->
	<select id="seletMatStockList" parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		SELECT * FROM (
		SELECT A.*, ROWNUM RNUM FROM ( 
			select a.lot_num, a.mat_code, (a.mat_vol - nvl(b.mat_vol,0)) as mat_vol
			from material_stock a,
			(select lot_num, mat_vol
			from produce_command_mat
			where prd_com_d_num in 
			    (select prd_com_d_num from produce_command_d 
			    where mat_out_chk = 'N')) b
			where a.lot_num = b.lot_num (+)
			and mat_code = #{matCode}
		<if test="lotNum1 != null and lotNum1 != ''">
				<![CDATA[	
					and lot_Num > #{lotNum1}
				]]>
		</if>
		ORDER BY lot_Num
		<![CDATA[					
		) A WHERE ROWNUM <= 10)
		]]>
	
	</select>
	
	<!-- 작업지시공정흐름 조회 -->
	<select id="selectProduceCommandFlowList"
		parameterType="mes.prd.com.service.ProduceCommandDVO"
		resultType="mes.prd.com.service.ProduceCommandDVO">
		SELECT * FROM (
		SELECT A.*, ROWNUM RNUM FROM (
		select f.*, p.prc_name
		from process_flow F, process P
		where f.prc_code = p.prc_code
		and itm_code = #{itmCode}
		<if test="prcFNo != null and prcFNo != ''">
			<![CDATA[	
				and prc_f_no > #{prcFNo}
			]]>
		</if>
		ORDER BY prc_f_no
		
		<![CDATA[					
		) A WHERE ROWNUM <= 10)
		]]>
	</select>
	
	<!-- 작업지시 master insert -->
	<insert id="insertProduceCommand">
		insert into Produce_Command values( 
			#{prdComNum},
			to_date(#{prdComDate},'yyyy-MM-dd'),
			#{prdComName},
			#{prdComNote}
		)
	</insert>
	
	<!-- 작업지시 master update -->
	<update id="updateProduceCommand">
		update Produce_Command set 
			prd_com_date = to_date(#{prdComDate},'yyyy-MM-dd'),
			prd_com_name = #{prdComName},
			prd_com_note = #{prdComNote}
		where prd_com_num = #{prdComNum}
	</update>
	
	<!-- 작업지시 grid 행 insert -->
	<insert id="insertProduceCommandD">
		declare
		v_matCode item.mat_code%type;
		v_prdWorkVol produce_plan_d.prd_work_vol%type;
		v_prdComVol produce_command_d.prd_com_vol%type;
		v_ordIndVol order_d.ord_ind_vol%type;
		begin
			select mat_code into v_matCode
			from item
			where itm_code = #{itmCode};
		
			insert into Produce_Command_D
				(prd_com_d_num, prd_com_num, itm_code, mat_code, prd_com_vol, prd_com_d_date, prc_com_no, prc_com_div, prd_com_d_note) 
				values(
					produce_command_d_seq.nextval,
					#{prdComNum},
					#{itmCode},
					v_matCode,
					#{prdComVol},
					to_date(#{prdComDDate1},'YYYY-MM-DD'),
					#{prcComNo},
					#{prcComDiv},
					#{prdComDNote}
				);
			
			<if test="#{prdPlanDNum} != null">
				select prd_work_vol into v_prdWorkVol
				from produce_plan_d
				where prd_plan_d_num = #{prdPlanDNum};
				
				select sum(prd_com_vol) into v_prdComVol
				from produce_command_d
				where prd_plan_d_num = #{prdPlanDNum} and prc_com_div = '정상';
				<![CDATA[					
				if v_prdWorkVol <= v_prdComVol then
					update produce_plan_d 
					set com_chk = 'Y'
					where prd_plan_d_num = #{prdPlanDNum};
				end if;
				]]>
			</if>
			<if test="#{ordDNum} != null">
				select nvl(sum(prd_com_vol),0) into v_ordIndVol
				from produce_command_d
				where ord_d_num = #{ordDNum} and prc_com_div = '정상';
				
				update order_d
				set ord_ind_vol = v_ordIndVol
				where ord_d_num = #{ordDNum};
			</if>
			end;
	</insert>
	
	<!-- 작업지시 grid 행 update -->
	<update id="updateProduceCommandD">
	declare
		v_prdWorkVol produce_plan_d.prd_work_vol%type;
		v_prdComVol produce_command_d.prd_com_vol%type;
		v_ordIndVol order_d.ord_ind_vol%type;
		begin
			update Produce_Command_D set 
				itm_code = #{itmCode},
				prd_com_vol = #{prdComVol},
				prd_com_d_date = to_date(#{prdComDDate1},'YYYY-MM-DD'),
				prc_com_no = #{prcComNo},
				prc_com_div = #{prcComDiv},
				prd_com_d_note = #{prdComDNote}
			where prd_com_d_num = #{prdComDNum};
			
			<if test="#{prdPlanDNum} != null">
				select prd_work_vol into v_prdWorkVol
				from produce_plan_d
				where prd_plan_d_num = #{prdPlanDNum};
				
				select sum(prd_com_vol) into v_prdComVol
				from produce_command_d
				where prd_plan_d_num = #{prdPlanDNum} and prc_com_div = '정상';
				<![CDATA[					
				if v_prdWorkVol > v_prdComVol then
					update produce_plan_d 
					set com_chk = 'N'
					where prd_plan_d_num = #{prdPlanDNum};
				end if;
				]]>
			</if>
			<if test="#{ordDNum} != null">
				select nvl(sum(prd_com_vol),0) into v_ordIndVol
				from produce_command_d
				where ord_d_num = #{ordDNum} and prc_com_div = '정상';
				
				update order_d
				set ord_ind_vol = v_ordIndVol
				where ord_d_num = #{ordDNum};
			</if>
		end;
	</update>
	
	<!-- 작업지시 grid 행 delete -->
	<delete id="deleteProduceCommandD">
		declare
			v_prdWorkVol produce_plan_d.prd_work_vol%type;
			v_prdComVol produce_command_d.prd_com_vol%type;
			v_ordIndVol order_d.ord_ind_vol%type;
		begin
			delete from Produce_Command_D 
			where prd_com_d_num = #{prdComDNum}
			
			<if test="#{prdPlanDNum} != null">
				select prd_work_vol into v_prdWorkVol
				from produce_plan_d
				where prd_plan_d_num = #{prdPlanDNum};
				
				select sum(prd_com_vol) into v_prdComVol
				from produce_command_d
				where prd_plan_d_num = #{prdPlanDNum} and prc_com_div = '정상';
				<![CDATA[					
				if v_prdWorkVol > v_prdComVol then
					update produce_plan_d 
					set com_chk = 'N'
					where prd_plan_d_num = #{prdPlanDNum};
				end if;
				]]>
			</if>
			<if test="#{ordDNum} != null">
				select nvl(sum(prd_com_vol),0) into v_ordIndVol
				from produce_command_d
				where ord_d_num = #{ordDNum} and prc_com_div = '정상';
				
				update order_d
				set ord_ind_vol = v_ordIndVol
				where ord_d_num = #{ordDNum};
			</if>
		end;
	</delete>
	
	<!-- 작업지시 마스터번호 구하기 -->
	<select id="getPrdComCount" resultType="int">
		select nvl(to_number(max(substr(prd_com_num,11))),0) + 1
		from produce_command
		where to_char(prd_com_date,'yyyy-MM-dd') = #{prdComDate}
	</select>
	
	<!-- 작업지시 Mat 행 insert -->
	<insert id="insertProduceCommandMat">
		<selectKey resultType="BigDecimal" keyProperty="prdComMatNum" order="BEFORE">
	        SELECT nvl(MAX(prd_com_mat_num),0)+1 FROM produce_command_mat        
	    </selectKey>  
		insert into produce_command_mat(prd_com_mat_num, prd_com_d_num, mat_code, lot_num, mat_vol, prd_com_mat_O, prd_com_mat_note)
		values(#{prdComMatNum}, #{prdComDNum}, #{matCode}, #{lotNum}, #{matVol}, #{prdComMatO}, #{prdComMatNote})
	</insert>
	
	<!-- 작업지시 Mat 행 update -->
	<update id="updateProduceCommandMat">
		update produce_command_mat set 
		lot_num = #{lotNum},
		mat_vol = #{matVol},
		prd_com_mat_O = #{prdComMatO},
		prd_com_mat_note = #{prdComMatNote}
		where prd_com_mat_num = #{prdComMatNum}
	</update>
	
	<!-- 작업지시 Mat 행 delete -->
	<delete id="deleteProduceCommandMat">
		delete from produce_command_mat
		where prd_com_mat_num = #{prdComMatNum}
	</delete>
	
	<!-- 입출반관리 마스터번호 구하기 -->
	<select id="getNewMatHisNum" resultType="String">
		select 'MOT'|| #{date} || lpad(to_char(nvl(to_number(max(substr(mat_his_num,12))),0) + 1),3,'0')
		from material_history
		where to_char(mat_his_date,'yyyyMMdd') = #{date}
	</select>
	
	<!-- 입출반관리 마스터 생성 -->
	<insert id="insertMatHis">
		insert into material_history(mat_his_num,mat_his_div,mat_his_date,mat_out,mat_his_vol)
		values(#{matHisNum}, '출고', #{matHisDate}, #{prcName}, #{matHisVol})
	</insert>
	
	<!-- 입출반관리 detail 추가 -->
	<insert id="insertMatHisD"> 
		insert into material_history_d(mat_his_d_num, mat_his_num, mat_code, lot_num, mat_his_d_vol)
		values(MATERIAL_HISTORY_SEQ.nextval, #{matHisNum}, #{matCode}, #{lotNum}, #{matVol})
	</insert>
	
	<!-- 출고자재 자재재고 행 update -->
	<update id="updatetMatStc"> 
		declare
			v_matVol material_stock.mat_vol%type;
		begin
			IF #{lotNum} is null THEN
		      	SELECT mat_vol into v_matVol FROM material_stock  
	        	where mat_code = #{matCode} and lot_num is null;
		    ELSE
		     	SELECT mat_vol into v_matVol FROM material_stock  
	        	where mat_code = #{matCode} and lot_num = #{lotNum};
		    END IF;
	        
			update material_stock set 
			mat_vol = v_matVol - #{matVol}
			where lot_num = #{lotNum} and mat_code = #{matCode};
		end;
	</update>
	
	<!-- 공정실적 마스터번호 구하기(수정필) -->
	<select id="getPrcResCount" resultType="int">
		select nvl(to_number(max(substr(mov_num,2))),0) + 1
		from process_result
	</select>
	
	<!-- 공정실적 마스터 생성 -->
	<insert id="insertPrcRes">
		insert into process_result(mov_num,prd_com_d_num,itm_code,lot_num,prc_com_vol)
		values(#{movNum}, #{prdComDNum}, #{itmCode}, #{lotNum}, #{matVol})
	</insert>
	
	<!-- 공정실적 detail 추가(첫) -->
	<insert id="insertPrcResDF">
		insert into process_result_d(prc_res_d_num, mov_num, prc_res_no, prc_code, prc_state, prc_com_d_vol)
		values(PROCESS_RESULT_D_SEQ.nextval, #{movNum}, #{prcFNo}, #{prcCode}, '준비',#{matVol})
	</insert>
	
	<!-- 공정실적 detail 추가(이후) -->
	<insert id="insertPrcResD">
		insert into process_result_d(prc_res_d_num, mov_num, prc_res_no, prc_code, prc_state, prc_com_d_vol)
		values(PROCESS_RESULT_D_SEQ.nextval, #{movNum}, #{prcFNo}, #{prcCode}, '준비', 0)
	</insert>

	<!-- 작업지시디테일 출고여부 Y update -->
	<update id="updatePrdComDY"> 
		update Produce_Command_D set 
			mat_out_chk = 'Y'
		where prd_com_d_num = #{prdComDNum}
	</update>
	
</mapper>
